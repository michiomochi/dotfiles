# Prefix変更 C-b -> C-t
set-option -g prefix C-t
bind-key C-t send-prefix
unbind-key C-b

# key bind (windowの移動)
# カーソルキーで移動
bind -n left previous-window
bind -n right next-window

# key bind (paneの移動)
# Shift + カーソルキーで移動
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# 256色端末を使用する
set-option -g default-terminal "screen-256color"
# viのキーバインドを使用する
set-window-option -g mode-keys vi

# ステータスバー設定
set -g status-utf8 on
set -g status-interval 3
set -g status-bg '#444444'
set -g status-fg '#cccccc'
set -g status-right-length 100
set -g status-right "#[fg=#cccccc,bg=#666666]#(tmux-mem-cpu-load --colors 3) %Y/%m/%d %H:%M:%S"
set -g renumber-windows on

# window settings
set -g window-status-current-format '#[fg=colour120,noreverse,bold][#I: #W]'
set -g window-status-format '#[fg=colour243][#I: #W]'
set -g base-index 1
set-window-option -g pane-base-index 1

# マウスの有効化
set-option -g history-limit 10000
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on

# vim like copy
bind-key -t vi-copy v begin-selection
if "type reattach-to-user-namespace" "bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'"

# for mac clipboard
if "type reattach-to-user-namespace" "unbind -t vi-copy Enter"
if "type reattach-to-user-namespace" "bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'"

# auto rename
setw -g automatic-rename on

# キーディレイを減らす
set -sg escape-time 1
